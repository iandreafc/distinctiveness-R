add_vertices(6, name = "F")
g <- g + edge(1, 5, weight = 5)
plot(g)
g <- make_empty_graph() %>%
add_vertices(1, name = "A") %>%
add_vertices(2, name = "B") %>%
add_vertices(3, name = "C") %>%
add_vertices(4, name = "D") %>%
add_vertices(5, name = "E") %>%
add_vertices(6, name = "F")
g <- g + edge(1, 5, weight = 5)
plot(g)
g <- make_empty_graph() %>%
add_vertices(1, name = "A") %>%
add_vertices(2, name = "B") %>%
add_vertices(3, name = "C") %>%
add_vertices(4, name = "D") %>%
add_vertices(5, name = "E") %>%
add_vertices(6, name = "F")
plot(g)
g <- make_empty_graph() %>%
add_vertices(1, name = "A") %>%
add_vertices(2, name = "B") %>%
add_vertices(3, name = "C") %>%
add_vertices(4, name = "D") %>%
add_vertices(5, name = "E") %>%
add_vertices(6, name = "F")
g <- make_empty_graph() %>%
add_vertices(1, name = "A") %>%
add_vertices(1, name = "B") %>%
add_vertices(1, name = "C") %>%
add_vertices(1, name = "D") %>%
add_vertices(1, name = "E") %>%
add_vertices(1, name = "F")
plot(g)
g <- g + edge(1, 5, weight = 5)
plot(g)
+ edge(2, 4, weight = 2) + edge(3, 4, weight = 5)
g <- g + edge(1, 5, weight = 5) + edge(1, 2, weight = 2) %>%
+ edge(2, 6, weight = 5) + edge(2, 3, weight = 2) %>%
+ edge(2, 4, weight = 2) + edge(3, 4, weight = 5) %>%
plot(g)
g <- g + edge(1, 5, weight = 5) + edge(1, 2, weight = 2) %>%
+ edge(2, 6, weight = 5) + edge(2, 3, weight = 2) %>%
+ edge(2, 4, weight = 2) + edge(3, 4, weight = 5)
g <- g + edge(1, 5, weight = 5) + edge(1, 2, weight = 2) %>%
edge(2, 6, weight = 5) + edge(2, 3, weight = 2) %>%
edge(2, 4, weight = 2) + edge(3, 4, weight = 5)
g <- g + edge(1, 5, weight = 5) + edge(1, 2, weight = 2) %>%
+ edge(2, 6, weight = 5) + edge(2, 3, weight = 2) %>%
+ edge(2, 4, weight = 2) + edge(3, 4, weight = 5)
g <- g + edge(1, 5, weight = 5) + edge(1, 2, weight = 2) + edge(2, 6, weight = 5) + edge(2, 3, weight = 2) %>%
+ edge(2, 4, weight = 2) + edge(3, 4, weight = 5)
g <- g + edge(1, 5, weight = 5) + edge(1, 2, weight = 2) + edge(2, 6, weight = 5) + edge(2, 3, weight = 2) edge(2, 4, weight = 2) + edge(3, 4, weight = 5)
g <- g + edge(1, 5, weight = 5) + edge(1, 2, weight = 2) +
edge(2, 6, weight = 5) + edge(2, 3, weight = 2) +
edge(2, 4, weight = 2) + edge(3, 4, weight = 5)
plot(g)
g <- make_empty_graph(directed = no) %>%
add_vertices(1, name = "A") %>%
add_vertices(1, name = "B") %>%
add_vertices(1, name = "C") %>%
add_vertices(1, name = "D") %>%
add_vertices(1, name = "E") %>%
add_vertices(1, name = "F")
g <- make_empty_graph(directed = FALSE) %>%
add_vertices(1, name = "A") %>%
add_vertices(1, name = "B") %>%
add_vertices(1, name = "C") %>%
add_vertices(1, name = "D") %>%
add_vertices(1, name = "E") %>%
add_vertices(1, name = "F")
g <- g + edge(1, 5, weight = 5) + edge(1, 2, weight = 2) +
edge(2, 6, weight = 5) + edge(2, 3, weight = 2) +
edge(2, 4, weight = 2) + edge(3, 4, weight = 5)
plot(g)
plot(g, edge.width = E(g)$weight)
weisumalpha(g, 1)
weisumalpha(g, 2)
g <- make_empty_graph(directed = FALSE) %>%
add_vertices(1, name = "A") %>%
add_vertices(1, name = "B") %>%
add_vertices(1, name = "C") %>%
add_vertices(1, name = "D") %>%
add_vertices(1, name = "E") %>%
add_vertices(1, name = "F")
g <- g + edge(1, 5, weight = 5) + edge(1, 2, weight = 2) +
edge(2, 6, weight = 5) + edge(2, 3, weight = 2) +
edge(2, 4, weight = 2) + edge(3, 4, weight = 5)
plot(g, edge.width = E(g)$weight)
weisumalpha(g, 2)
weisumalpha <- function(G, a) {
wsalength <- gorder(G)
wei_sum_alpha <- vector(mode = "list", length = wsalength)
if (a != 1) {
for (node in V(G)) {
wei_sum_alpha[node] <- 0
ego <- ego(G, order = 1, nodes = node, mindist = 0)
for (edge in ego) {
edge
# wei_sum_alpha[node] <- wei_sum_alpha[node] + (edge$weight ** a)
}
}
}
else {
for (node in V(G)) {
wei_sum_alpha[node] <- degree(g, V = node)
}
}
return(wei_sum_alpha)
}
weisumalpha(g, 2)
weisumalpha <- function(G, a) {
wsalength <- gorder(G)
wei_sum_alpha <- vector(mode = "list", length = wsalength)
if (a != 1) {
for (node in V(G)) {
wei_sum_alpha[node] <- 0
ego <- ego(G, order = 1, nodes = node, mindist = 0)
for (edge in ego) {
edge
# wei_sum_alpha[node] <- wei_sum_alpha[node] + (edge$weight ** a)
}
}
}
else {
for (node in V(G)) {
wei_sum_alpha[node] <- degree(g, V = node)
}
}
return(wei_sum_alpha)
}
source("dc.R")
weisumalpha(g, 2)
1
weisumalpha(g, 2)
setwd("C:/Users/IV/Desktop/UniPG/distinctiveness-R/distinctiveness")
source("dc.R")
g <- make_empty_graph(directed = FALSE) %>%
add_vertices(1, name = "A") %>%
add_vertices(1, name = "B") %>%
add_vertices(1, name = "C") %>%
add_vertices(1, name = "D") %>%
add_vertices(1, name = "E") %>%
add_vertices(1, name = "F")
g <- g + edge(1, 5, weight = 5) + edge(1, 2, weight = 2) +
edge(2, 6, weight = 5) + edge(2, 3, weight = 2) +
edge(2, 4, weight = 2) + edge(3, 4, weight = 5)
plot(g, edge.width = E(g)$weight)
weisumalpha(g, 2)
weisumalpha <- function(G, a) {
wsalength <- gorder(G)
wei_sum_alpha <- vector(mode = "list", length = wsalength)
if (a != 1) {
for (node in V(G)) {
wei_sum_alpha[node] <- 0
ego <- ego(G, order = 1, nodes = node, mindist = 0)
for (edge in ego) {
# wei_sum_alpha[node] <- wei_sum_alpha[node] + (edge$weight ** a)
}
}
}
else {
for (node in V(G)) {
wei_sum_alpha[node] <- degree(g, V = node)
}
}
return(wei_sum_alpha)
}
weiinoutsumalpha <- function(G, a) {
wsalength <- gorder(G)
wei_outsum_alpha <- vector(mode = "list", length = wsalength)
wei_insum_alpha <- vector(mode = "list", length = wsalength)
if (a != 1) {
for (node in V(G)) {
wei_sum_alpha[node] <- 0
outego <- ego(G, order = 1, nodes = node, mode = "out", mindist = 0)
inego <- ego(G, order = 1, nodes = node, mode = "in", mindist = 0)
for (edge in outego) {
wei_outsum_alpha[node] <- wei_outsum_alpha[node] + (edge$weight ** a)
}
for (edge in inego) {
wei_insum_alpha[node] <- wei_insum_alpha[node] + (edge$weight ** a)
}
}
}
else {
for (node in V(G)) {
wei_outsum_alpha[node] <- degree(g, V = node, mode = c("out"))
wei_insum_alpha[node] <- degree(g, V = node, mode = c("in"))
}
}
# python version returns both lists rather than the two combined into one list
wei_sums <- list("insum" = wei_insum_alpha, "outsum" = wei_outsum_alpha)
return(wei_sums)
#wei_sums$insum = in sum, wei_sums$outsum = out sum
}
setwd("C:/Users/IV/Desktop/UniPG/distinctiveness-R/distinctiveness")
source("dc.R")
g <- make_empty_graph(directed = FALSE) %>%
add_vertices(1, name = "A") %>%
add_vertices(1, name = "B") %>%
add_vertices(1, name = "C") %>%
add_vertices(1, name = "D") %>%
add_vertices(1, name = "E") %>%
add_vertices(1, name = "F")
g <- g + edge(1, 5, weight = 5) + edge(1, 2, weight = 2) +
edge(2, 6, weight = 5) + edge(2, 3, weight = 2) +
edge(2, 4, weight = 2) + edge(3, 4, weight = 5)
plot(g, edge.width = E(g)$weight)
weisumalpha(g, 2)
weisumalpha(g, 2)
weisumalpha <- function(G, a) {
wsalength <- gorder(G)
wei_sum_alpha <- vector(mode = "list", length = wsalength)
if (a != 1) {
for (node in V(G)) {
wei_sum_alpha[node] <- 0
ego <- ego(G, order = 1, nodes = node, mindist = 0)
# for (edge in ego) {
#   # wei_sum_alpha[node] <- wei_sum_alpha[node] + (edge$weight ** a)
# }
}
}
else {
for (node in V(G)) {
wei_sum_alpha[node] <- degree(g, V = node)
}
}
return(wei_sum_alpha)
}
weisumalpha(g, 2)
weiinoutsumalpha <- function(G, a) {
wsalength <- gorder(G)
wei_outsum_alpha <- vector(mode = "list", length = wsalength)
wei_insum_alpha <- vector(mode = "list", length = wsalength)
if (a != 1) {
for (node in V(G)) {
wei_sum_alpha[node] <- 0
outego <- ego(G, order = 1, nodes = node, mode = "out", mindist = 0)
inego <- ego(G, order = 1, nodes = node, mode = "in", mindist = 0)
for (edge in outego) {
wei_outsum_alpha[node] <- wei_outsum_alpha[node] + (edge$weight ** a)
}
for (edge in inego) {
wei_insum_alpha[node] <- wei_insum_alpha[node] + (edge$weight ** a)
}
}
}
else {
for (node in V(G)) {
wei_outsum_alpha[node] <- degree(g, V = node, mode = c("out"))
wei_insum_alpha[node] <- degree(g, V = node, mode = c("in"))
}
}
# python version returns both lists rather than the two combined into one list
wei_sums <- list("insum" = wei_insum_alpha, "outsum" = wei_outsum_alpha)
return(wei_sums)
#wei_sums$insum = in sum, wei_sums$outsum = out sum
}
source("C:/Users/IV/Desktop/UniPG/distinctiveness-R/distinctiveness/dc.R")
source("C:/Users/IV/Desktop/UniPG/distinctiveness-R/distinctiveness/dcTest.R")
source("C:/Users/IV/Desktop/UniPG/distinctiveness-R/distinctiveness/dcTest.R")
setwd("C:/Users/IV/Desktop/UniPG/distinctiveness-R/distinctiveness")
source("dc.R")
g <- make_empty_graph(directed = FALSE) %>%
add_vertices(1, name = "A") %>%
add_vertices(1, name = "B") %>%
add_vertices(1, name = "C") %>%
add_vertices(1, name = "D") %>%
add_vertices(1, name = "E") %>%
add_vertices(1, name = "F")
g <- g + edge(1, 5, weight = 5) + edge(1, 2, weight = 2) +
edge(2, 6, weight = 5) + edge(2, 3, weight = 2) +
edge(2, 4, weight = 2) + edge(3, 4, weight = 5)
plot(g, edge.width = E(g)$weight)
weisumalpha(g, 2)
# wei_sum_alpha[node] <- 0
ego <- ego(G, order = 1, nodes = node, mindist = 0)
weisumalpha <- function(G, a) {
wsalength <- gorder(G)
wei_sum_alpha <- vector(mode = "list", length = wsalength)
if (a != 1) {
for (node in V(G)) {
# wei_sum_alpha[node] <- 0
ego <- ego(G, order = 1, nodes = node, mindist = 0)
# for (edge in ego) {
#   # wei_sum_alpha[node] <- wei_sum_alpha[node] + (edge$weight ** a)
# }
}
}
else {
for (node in V(G)) {
wei_sum_alpha[node] <- degree(g, V = node)
}
}
return(wei_sum_alpha)
}
source("C:/Users/IV/Desktop/UniPG/distinctiveness-R/distinctiveness/dc.R")
weisumalpha(g, 2)
weisumalpha <- function(G, a) {
wsalength <- gorder(G)
wei_sum_alpha <- numeric(wsalength)
if (a != 1) {
for (node in V(G)) {
# wei_sum_alpha[node] <- 0
for (edge in E[g]) {
# wei_sum_alpha[node] <- wei_sum_alpha[node] + (edge$weight ** a)
}
}
}
else {
for (node in V(G)) {
wei_sum_alpha[node] <- degree(g, V = node)
}
}
return(wei_sum_alpha)
}
get.edgelist(g)
get.edges(g)
get.edge.ids(g, 1)
get.edge.ids(g, {1})
get.edge.ids(g, list(1))
get.edge.ids(g, [1])
E(g)
E(g)[1]
E(g)[2]
E(g)[3]
E(g)[4]
E(g)[4]$weight
E(g)[4][1]
E(g)[4]
as_edgelist(g)
as_edgelist(g)[1]
as_edgelist(g)[2]
as_edgelist(g)[3]
as_edgelist(g)[1,1]
as_edgelist(g)[1,2]
E(g)[4]$base
E(g)[4]
get.adjacency(g)
get.adjacency(g)[1]
get.adjacency(g)[2]
get.adjacency(g)[1][2]
get.adjacency(g)[1][1}
get.adjacency(g)[1][1]
adj[1][1]
adj <- get.adjacency(g)
adj[1][1]
adj <- get.adjacency(g)
for (i in 1:6) {
for (j in 1:6) {
adj[i][i]
}
}
adj <- get.adjacency(g)
for (i in 1:6) {
for (j in 1:6) {
adj[i][i]
}
}
adj <- get.adjacency(g)
for (i in 1:6) {
for (j in 1:6) {
print(adj[i][i])
}
}
print(adj[i][j])
for (i in 1:6) {
for (j in 1:6) {
print(adj[i][j])
}
}
adj <- get.adjacency(g)
for (i in 1:6) {
for (j in 1:6) {
print(adj[i][j])
}
}
adj <- get.adjacency(g)
adj
for (i in 1:6) {
for (j in 1:6) {
print(adj[i][j])
}
}
adj
for (rows in 1:nrow(adj)) {
for (j in 1:ncol(adj)) {
print(adj[i, j])
}
}
weisumalpha <- function(G, a) {
wsalength <- gorder(G)
wei_sum_alpha <- numeric(wsalength)
if (a != 1) {
adj <- get.adjacency(G)
for (rows in 1:nrow(adj)) {
for (j in 1:ncol(adj)) {
if(adj[i, j] == 1) {
wei_sum_alpha[node] <- wei_sum_alpha[node] +
E(g)[get.edge.ids(G, c(i, j))]$weight ** a
}
# print(adj[i, j])
}
}
# for (node in V(G)) {
#   for (edge in E[g]) {
#     if(edge)
#     wei_sum_alpha[node] <- wei_sum_alpha[node] + (edge$weight ** a)
#   }
# }
}
else {
for (node in V(G)) {
wei_sum_alpha[node] <- degree(g, V = node)
}
}
return(wei_sum_alpha)
}
weisumalpha(g, 2)
weisumalpha <- function(G, a) {
wsalength <- gorder(G)
wei_sum_alpha <- numeric(wsalength)
if (a != 1) {
adj <- get.adjacency(G)
for (i in 1:nrow(adj)) {
for (j in 1:ncol(adj)) {
if(adj[i, j] == 1) {
wei_sum_alpha[i] <- wei_sum_alpha[i] +
E(g)[get.edge.ids(G, c(i, j))]$weight ** a
}
# print(adj[i, j])
}
}
# for (node in V(G)) {
#   for (edge in E[g]) {
#     if(edge)
#     wei_sum_alpha[node] <- wei_sum_alpha[node] + (edge$weight ** a)
#   }
# }
}
else {
for (node in V(G)) {
wei_sum_alpha[node] <- degree(g, V = node)
}
}
return(wei_sum_alpha)
}
weisumalpha(g, 2)
weisumalpha <- function(G, a) {
wsalength <- gorder(G)
wei_sum_alpha <- numeric(wsalength)
if (a != 1) {
adj <- get.adjacency(G)
adj
for (i in 1:nrow(adj)) {
for (j in 1:ncol(adj)) {
if(adj[i, j] == 1) {
wei_sum_alpha[i] <- wei_sum_alpha[i] +
E(g)[get.edge.ids(G, c(i, j))]$weight ** a
}
# print(adj[i, j])
}
}
# for (node in V(G)) {
#   for (edge in E[g]) {
#     if(edge)
#     wei_sum_alpha[node] <- wei_sum_alpha[node] + (edge$weight ** a)
#   }
# }
}
else {
for (node in V(G)) {
wei_sum_alpha[node] <- degree(g, V = node)
}
}
return(wei_sum_alpha)
}
weisumalpha(g, 2)
print(adj)
weisumalpha <- function(G, a) {
wsalength <- gorder(G)
wei_sum_alpha <- numeric(wsalength)
if (a != 1) {
adj <- get.adjacency(G)
print(adj)
for (i in 1:nrow(adj)) {
for (j in 1:ncol(adj)) {
if(adj[i, j] == 1) {
wei_sum_alpha[i] <- wei_sum_alpha[i] +
E(g)[get.edge.ids(G, c(i, j))]$weight ** a
}
# print(adj[i, j])
}
}
# for (node in V(G)) {
#   for (edge in E[g]) {
#     if(edge)
#     wei_sum_alpha[node] <- wei_sum_alpha[node] + (edge$weight ** a)
#   }
# }
}
else {
for (node in V(G)) {
wei_sum_alpha[node] <- degree(g, V = node)
}
}
return(wei_sum_alpha)
}
weisumalpha(g, 2)
source("C:/Users/IV/Desktop/UniPG/distinctiveness-R/distinctiveness/dc.R")
